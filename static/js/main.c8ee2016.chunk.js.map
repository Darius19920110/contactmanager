{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/test/Test.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","About","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onSubmit","e","preventDefault","newContact","post","history","push","target","EditContact","updContact","match","params","put","Test","title","body","fetch","then","response","json","App","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.c8ee2016.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => \n        contact.id !== action.payload)\n      };\n      case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload,\n        ...state.contacts]\n      };\n      case 'UPDATE_CONTACT':\n        return {\n          ...state,\n          contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\n        }\n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => \n      reducer(state, action))\n  };\n\n  async componentDidMount() {\n    const res = await axios.get\n      ('https://jsonplaceholder.typicode.com/users');\n        \n      this.setState({contacts: res.data});\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete\n    (`https://jsonplaceholder.typicode.com/users/${id}`);\n    \n    dispatch({ type: 'DELETE_CONTACT', payload: id});\n    } catch {\n      dispatch({ type: 'DELETE_CONTACT', payload: id});\n    }\n  }\n    \n\n  render() {\n      const { showContactInfo } = this.state;\n      const { id, name, email, phone } = this.props.contact;\n\n    return (\n        <Consumer>\n          {value => {\n            const { dispatch } = value;\n            return (\n              <div className=\"card card-body mb-3\">\n\n        <h4>{name}{' '}\n\n         <i onClick={() => {this.setState({showContactInfo:   !this.state.showContactInfo});\n        }} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\n        \n        <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\n\n        <Link to={`contact/edit/${id}`}>\n          <i \n          className=\"fas fa-pencil-alt\" \n          style={{\n            float: 'right',\n            cursor: 'pointer',\n            color: 'black',\n            marginRight: '1rem'\n            }}>\n            </i>\n        </Link>\n        \n        </h4>\n\n        {showContactInfo ? (\n          <ul className=\"list-group\">\n          <li className=\"list-group-item\">Email: {email}</li>\n          <li className=\"list-group-item\">Phone: {phone}</li>\n        </ul>\n        ) : null}\n        </div>\n            )\n          }}\n        </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n          {value => {\n            const { contacts } = value;\n            return (\n              <React.Fragment>\n                <h1 className=\"display-4 mb-2\">\n                  <span className=\"text-danger\">\n                    Contact\n                  </span> List\n                </h1>\n                {contacts.map(contact => (\n              <Contact\n                key={contact.id}\n                contact={contact}\n              />\n                ))}\n              </React.Fragment>\n            )\n          }}\n      </Consumer>\n    )\n  }\n}\n\nexport default Contacts;\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3\">\n      <div className=\"container\">\n        <a className=\"navbar-brand\" href=\"#!\">\n          {branding}\n        </a>\n\n        <div>\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n  branding: 'myApp'\n}\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react'\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n       <label htmlFor={name}>{label}</label>\n          <input \n            type={type}\n            name={name}\n            className={classnames(\"form-control form-control-lg\", {\n              'is-invalid': error\n            })}\n            placeholder={placeholder}\n            value={value}\n            onChange={onChange}\n        />\n        {error && <div className=\"invalid-feedback\">\n          {error}</div>}\n        \n        </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    \n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({errors: { name: 'Name is required'}});\n      return;\n    }\n\n    if (email === '') {\n      this.setState({errors: { email: 'Email is required'}});\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required'}});\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    }\n\n    const res = await axios.post\n      ('https://jsonplaceholder.typicode.com/users', newContact)\n      \n      dispatch({ type: 'ADD_CONTACT', payload: res.data })\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value});\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n     \n                  <TextInputGroup \n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />  \n\n                  <TextInputGroup \n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\"/>\n                </form>\n              </div>\n            </div>\n           </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from 'react';\nimport {Consumer} from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get\n    (`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    })\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    \n    const { name, email, phone } = this.state;\n\n    // Check For Errors\n    if (name === '') {\n      this.setState({errors: { name: 'Name is required'}});\n      return;\n    }\n\n    if (email === '') {\n      this.setState({errors: { email: 'Email is required'}});\n      return;\n    }\n\n    if (phone === '') {\n      this.setState({ errors: { phone: 'Phone is required'}});\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put\n      (`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n      dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n    this.setState({\n      name: '',\n      email: '',\n      phone: '',\n      errors: {}\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value});\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n     \n                  <TextInputGroup \n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />  \n\n                  <TextInputGroup \n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\"/>\n                </form>\n              </div>\n            </div>\n           </div>\n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n  state= {\n    title: '',\n    body: ''\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/posts/3')\n      .then(response => response.json())\n      .then(data => this.setState({\n        title: data.title,\n        body: data.body\n      })\n    );\n  }\n\n  // UNSAFE_componentWillMount() {\n  //   console.log('componentWillMount...');\n  // }\n\n  // componentDidUpdate() {\n  //   console.log('componentDidUpdate...');\n  // }\n  // UNSAFE_componentWillUpdate() {\n  //   console.log('componentWillUpdate...');\n  // }\n\n  // UNSAFE_componentWillReceiveProps(nextProps, nextState){\n  //   console.log('componentWillReceiveProps...');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState) {\n  //   return null;\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState) {\n  //   console.log('getSnapshotBeforeUpdate...');\n  // }\n\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    )\n  }\n}\n\nexport default Test;\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Provider } from './context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Test from './components/test/Test';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}